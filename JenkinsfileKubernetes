pipeline {
    agent any

    stages {
        stage('SCM Checkout') {
            steps {
                git url: 'https://github.com/sonali-source/Repo.git', branch: 'master'
            }
        }

        stage('Maven Clean') {
            steps {
                sh 'mvn clean package'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker rmi -f sonali192/spring-boot-mongo || true'
                sh 'docker build -t sonali192/spring-boot-mongo .'
            }
        }
/*
        stage('Push Docker Image to ACR/DockerHub') {
            steps {
                withDockerRegistry(credentialsId: 'DockerHubReg', url: 'https://index.docker.io/v1/') {
                    sh 'docker push pkw0301/spring-boot-mongo'
                }
            }
        }

        stage('Deploy To Kubernetes Cluster') {
            steps {
                sh """
                kubernetesDeploy configs: 'springBootMongo.yml', 
                kubeConfig: [path: '/var/lib/jenkins/workspace/kubeconfig'], 
                kubeconfigId: 'kubetntes', 
                secretName: '', 
                ssh: [sshCredentialsId: 'ssh-k8smaster', sshServer: '3.71.27.155'], 
                textCredentials: [
                    certificateAuthorityData: '', 
                    clientCertificateData: '', 
                    clientKeyData: '', 
                    serverUrl: 'https://'
                ]
                """
            }
        }
*/
    }
}
